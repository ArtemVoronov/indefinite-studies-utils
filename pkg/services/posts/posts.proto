syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "github.com/ArtemVoronov/indefinite-studies-utils/pkg/services/posts/posts";

package posts;

service PostsService {
  rpc GetPost (GetPostRequest) returns (GetPostReply) {}
  rpc GetPosts(GetPostsRequest) returns (GetPostsReply) {}
  rpc GetPostsStream(stream GetPostRequest) returns (stream GetPostReply) {}
  rpc GetComment (GetCommentRequest) returns (GetCommentReply) {}
  rpc GetComments(GetCommentsRequest) returns (GetCommentsReply) {}
  rpc GetCommentsStream(stream GetCommentRequest) returns (stream GetCommentReply) {}
}

message GetPostRequest {
  int32 id = 1;
}

message GetPostReply {
  int32 id = 1;
  int32 authorId = 2;
  string text = 3;
  string previewText = 4;
  string topic = 5;
  string state = 6;
  google.protobuf.Timestamp createDate = 7;
  google.protobuf.Timestamp lastUpdateDate = 8;
}

message GetPostsRequest {
  int32 offset = 1;
  int32 limit = 2;
  repeated int32 ids = 3 [packed=true];
}

message GetPostsReply {
  int32 count = 1;
  int32 offset = 2;
  int32 limit = 3;
  repeated GetPostReply posts = 4;
}

message GetCommentRequest {
  int32 id = 1;
}

message GetCommentReply {
  int32 id = 1;
  int32 authorId = 2;
  int32 postId = 3;
  int32 linkedCommentId = 5;
  string text = 6;
  string state = 7;
  google.protobuf.Timestamp createDate = 8;
  google.protobuf.Timestamp lastUpdateDate = 9;
}

message GetCommentsRequest {  
  int32 postId = 1;
  int32 offset = 2;
  int32 limit = 3;
}

message GetCommentsReply {
  int32 count = 1;
  int32 offset = 2;
  int32 limit = 3;
  repeated GetCommentReply comments = 4;
}
